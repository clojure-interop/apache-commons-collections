(ns org.apache.commons.collections4.functors.core
  (:refer-clojure :only [require comment defn ->])
  (:import ))

(require '[org.apache.commons.collections4.functors.AbstractQuantifierPredicate])
(require '[org.apache.commons.collections4.functors.AllPredicate])
(require '[org.apache.commons.collections4.functors.AndPredicate])
(require '[org.apache.commons.collections4.functors.AnyPredicate])
(require '[org.apache.commons.collections4.functors.CatchAndRethrowClosure])
(require '[org.apache.commons.collections4.functors.ChainedClosure])
(require '[org.apache.commons.collections4.functors.ChainedTransformer])
(require '[org.apache.commons.collections4.functors.CloneTransformer])
(require '[org.apache.commons.collections4.functors.ClosureTransformer])
(require '[org.apache.commons.collections4.functors.ComparatorPredicate$Criterion])
(require '[org.apache.commons.collections4.functors.ComparatorPredicate])
(require '[org.apache.commons.collections4.functors.ConstantFactory])
(require '[org.apache.commons.collections4.functors.ConstantTransformer])
(require '[org.apache.commons.collections4.functors.DefaultEquator])
(require '[org.apache.commons.collections4.functors.EqualPredicate])
(require '[org.apache.commons.collections4.functors.ExceptionClosure])
(require '[org.apache.commons.collections4.functors.ExceptionFactory])
(require '[org.apache.commons.collections4.functors.ExceptionPredicate])
(require '[org.apache.commons.collections4.functors.ExceptionTransformer])
(require '[org.apache.commons.collections4.functors.FactoryTransformer])
(require '[org.apache.commons.collections4.functors.FalsePredicate])
(require '[org.apache.commons.collections4.functors.ForClosure])
(require '[org.apache.commons.collections4.functors.IdentityPredicate])
(require '[org.apache.commons.collections4.functors.IfClosure])
(require '[org.apache.commons.collections4.functors.IfTransformer])
(require '[org.apache.commons.collections4.functors.InstanceofPredicate])
(require '[org.apache.commons.collections4.functors.InstantiateFactory])
(require '[org.apache.commons.collections4.functors.InstantiateTransformer])
(require '[org.apache.commons.collections4.functors.InvokerTransformer])
(require '[org.apache.commons.collections4.functors.MapTransformer])
(require '[org.apache.commons.collections4.functors.NOPClosure])
(require '[org.apache.commons.collections4.functors.NOPTransformer])
(require '[org.apache.commons.collections4.functors.NonePredicate])
(require '[org.apache.commons.collections4.functors.NotNullPredicate])
(require '[org.apache.commons.collections4.functors.NotPredicate])
(require '[org.apache.commons.collections4.functors.NullIsExceptionPredicate])
(require '[org.apache.commons.collections4.functors.NullIsFalsePredicate])
(require '[org.apache.commons.collections4.functors.NullIsTruePredicate])
(require '[org.apache.commons.collections4.functors.NullPredicate])
(require '[org.apache.commons.collections4.functors.OnePredicate])
(require '[org.apache.commons.collections4.functors.OrPredicate])
(require '[org.apache.commons.collections4.functors.PredicateDecorator])
(require '[org.apache.commons.collections4.functors.PredicateTransformer])
(require '[org.apache.commons.collections4.functors.PrototypeFactory])
(require '[org.apache.commons.collections4.functors.StringValueTransformer])
(require '[org.apache.commons.collections4.functors.SwitchClosure])
(require '[org.apache.commons.collections4.functors.SwitchTransformer])
(require '[org.apache.commons.collections4.functors.TransformedPredicate])
(require '[org.apache.commons.collections4.functors.TransformerClosure])
(require '[org.apache.commons.collections4.functors.TransformerPredicate])
(require '[org.apache.commons.collections4.functors.TruePredicate])
(require '[org.apache.commons.collections4.functors.UniquePredicate])
(require '[org.apache.commons.collections4.functors.WhileClosure])
